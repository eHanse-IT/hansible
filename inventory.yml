---
# This file manages our servers and their variables.
# For each server, we declare the server-dependent variables that are required for the roles.
# 1. oatrade group:
#    - oaprod
#    - oatest
#    - godalko
# 3. eHanse group:
#    - ehprod
#    - ehtest
#    - jupyter

ehanse:
  vars:
    pipelining: true
    timezone: "Europe/Berlin"
    # BOOTSTRAP critical variables
    userlist:
      - "{{ ehanse_users }}"
    host_port: "{{ _vault_host_port }}"
    #SSMTP critical variables:
    host_ssmtp_root: "{{ _vault_ssmtp_AuthUser }}"
    host_ssmtp_host: "{{ _vault_ssmtp_host }}"
    host_ssmtp_port: "{{ _vault_ssmtp_port }}"
    host_ssmtp_hostname: "{{ domains[0].vhost }}"
    host_ssmtp_AuthUser: "{{ _vault_ssmtp_AuthUser }}"
    host_ssmtp_AuthPass: "{{ _vault_ssmtp_AuthPass }}"
    # FAIL2BAN critical variables:
    host_fail2ban_bantime:  600
    host_fail2ban_maxretry: 10
    host_fail2ban_findtime: 3600
    fail2ban_services:
      - name: sshd
        port: "{{ host_port }}"
    # ODOO critical variables:
    odoo_version:                       12.0
    odoo_config_superadmin_password:    "{{ _vault_odoo_config_superadmin_password_ehanse }}"
    odoo_config_admin_passwd:           "{{ _vault_odoo_config_superadmin_password_ehanse }}"
    odoo_config_db_filter:              ^%d$  # this ensures db filtering by subdomain
    odoo_config_list_db:                True
    odoo_config_logfile: /var/log/odoo/odoo-server.log   #explicitly required for fail2ban role
    odoo_config_logrotate: True
    odoo_config_proxy_mode:             True
    odoo_user_shell:                    /bin/bash
    odoo_user_system:                   False
    odoo_config_limit_memory_hard:      2684354560 # calculate min. 324MB RAM per worker
    odoo_config_limit_memory_soft:      2147483648
    odoo_config_limit_request:          8192       #Values added by Frank
    odoo_config_limit_time_cpu:         600        #Frank should recheck
    odoo_config_limit_time_real:        1200
    odoo_config_limit_time_real_cron:   -1         # enables cronjobs to run longer after Odoo 10
    odoo_config_longpolling_port:       8072
    odoo_config_max_cron_threads:       1          # each cron thread needs his own worker
    odoo_config_workers:                0          # max. workers = (Anzahl CPU *2) + 1 . We need 1 worker per 6 users and 1 for cron
    odoo_custom_repos:
      - {repo: "https://github.com/eHanse-IT/OAW_custom.git", dest: "OAW_custom"}
      - {repo: "https://github.com/rfhk/awo-custom.git", dest: "awo-custom"}
    odoo_config_addons_path:
      - "/home/{{ odoo_user }}/odoo/server/{{ (odoo_version | int) < 10 and 'openerp' or 'odoo' }}/addons"
      - "/home/{{ odoo_user }}/odoo/server/addons"
      - "/home/{{ odoo_user }}/odoo/custom/OAW-custom"
      - "/home/{{ odoo_user }}/odoo/custom/awo-custom"
    # Odoo FAIL2BAN critical variables:
    nginx_odoo_vhost_log_path: "/var/log/nginx/odoo.access.log"
    nginx_odoo_vhost_file: /etc/nginx/sites-available/odoo.conf

  hosts:
    any_localhost:
      ansible_host: 127.0.0.1
      connection: local
    ehprod:
      ansible_host: "{{ _vault_ehprod_ip }}"
      ansible_port: "{{ _vault_host_port }}"
      fqdn: "www.ehanse.de"
      hostname: "ehprod"
      domains:
        - {vhost: "www.ehanse.de", type: "odoo"}
        - {vhost: "wiki.ehanse.de", type: "wiki"}
        - {vhost: "seafile.ehanse.de", type: "seafile"}
        - {vhost: "mail.ehanse.de", type: "mailforwarder", webmail_address: "hosted.mailcow.de"}
      certbot_create_standalone_stop_services:
        - apache2
    ehtest:
      ansible_host: "{{ _vault_ehtest_ip }}"
      ansible_port: "{{ _vault_host_port }}"
      fqdn: "testsys1.ehanse.de"
      hostname: "ehtest"
      domains:
        - {vhost: "test1.ehanse.de", type: "odoo"}
        - {vhost: "test2.ehanse.de", type: "odoo"}
        #- {vhost: "testwiki.ehanse.de", type: "odoo"} TODO
        #- {vhost: "testseafile.ehanse.de", type: "odoo"}
        #- {vhost: "testsys3.ehanse.de", type: "seafile"}
        #- {vhost: "testsys4.ehanse.de", type: "mailforwarder", webmail_address: "hosted.mailcow.de"}
      certbot_create_standalone_stop_services:
        - nginx

jpm:
  vars:
    pipelining: true
    timezone: "Europe/Berlin"
    # BOOTSTRAP critical variables
    userlist:
      - "{{ ehanse_users }}"
    host_port: "{{ _vault_host_port }}"

    # Skipped config vars for Fail2Ban, Odoo and SSMTP

  hosts:
    cloud-jpm:
      ansible_ssh_common_args: '-o ProxyCommand="ssh -W %h:%p -q frank@92.60.37.207 -p 7365"'
      ansible_host: "{{ _vault_ehprod_ip }}"

      ansible_port: "{{ _vault_host_port }}"
      fqdn: "www.cloud.jpm-gmbh.de"
      hostname: "cloud"
      domains:
        - {vhost: "seafile.jpm-gmbh.de", type: "seafile"}
      certbot_create_standalone_stop_services:
        - nginx



oatrade:
  vars:
    # BOOTSTRAP critical variables
    host_port: "{{ _vault_host_port }}"
    pipelining: true
    timezone: "Asia/Hong_Kong"
    #SSMTP critical variables:
    host_ssmtp_root: "{{ _vault_ssmtp_AuthUser }}"
    host_ssmtp_host: "{{ _vault_ssmtp_host }}"
    host_ssmtp_port: "{{ _vault_ssmtp_port }}"
    host_ssmtp_hostname: "{{ domains[0].vhost }}"
    host_ssmtp_AuthUser: "{{ _vault_ssmtp_AuthUser }}"
    host_ssmtp_AuthPass: "{{ _vault_ssmtp_AuthPass }}"
    # FAIL2BAN critical variables:
    host_fail2ban_bantime:  600
    host_fail2ban_maxretry: 10
    host_fail2ban_findtime: 3600
    fail2ban_services:
      - name: sshd
        port: "{{ host_port }}"
    # Odoo critical variables
    odoo_config_superadmin_password:    "{{ _vault_odoo_config_superadmin_password_ehanse }}"
    odoo_config_admin_passwd:           "{{ _vault_odoo_config_superadmin_password_ehanse }}"
    odoo_config_db_filter:              ^%d$  # this ensures db filtering by subdomain
    odoo_config_list_db:                False
    odoo_config_logrotate:              True
    odoo_config_proxy_mode:             True
    odoo_user_shell:                    /bin/bash
    odoo_user_system:                   False
    odoo_config_limit_memory_hard:      4294967296 # calculate min. 324MB RAM per worker
    odoo_config_limit_memory_soft:      671088640
    odoo_config_limit_request:          8192       #Values added by Frank
    odoo_config_limit_time_cpu:         8192        #Frank should recheck
    odoo_config_limit_time_real:        1000
    odoo_config_limit_time_real_cron:   -1         # enables cronjobs to run longer after Odoo 10
    odoo_config_log_level:              debug
    odoo_config_longpolling_port:       8072
    odoo_config_max_cron_threads:       2          # each cron thread needs his own worker
    odoo_config_workers:                5          # max. workers = (Anzahl CPU *2) + 1 . We need 1 worker per 6 users and 1 for cron
    odoo_custom_repos:
      - {repo: "https://github.com/eHanse-IT/OAW_custom.git", dest: "OAW_custom"}
      - {repo: "https://github.com/rfhk/awo-custom.git", dest: "awo-custom"}
    odoo_config_addons_path:
      - "/home/{{ odoo_user }}/odoo/server/{{ (odoo_version | int) < 10 and 'openerp' or 'odoo' }}/addons"
      - "/home/{{ odoo_user }}/odoo/server/addons"
      - "/home/{{ odoo_user }}/odoo/custom/OAW-custom"
      - "/home/{{ odoo_user }}/odoo/custom/awo-custom"

  hosts:
    twprod:
      userlist:
        - "{{ ehanse_users }}"
        - "{{ rfhk_users }}"
      ansible_host: "{{ _vault_twprod_ip }}"
      ansible_port: "{{ _vault_host_port }}"
      fqdn: "oaprod.oa-trade.com"
      hostname: "oaprod"
      domains:
        - {vhost: "oa.oa-trade.com", type: "odoo"}
      certbot_create_standalone_stop_services:
        - apache2
      # Timeware Production is still running Odoo Version 8 therefore, set Odoo config variables on host level:
      #play_3_odoo critical variables (also uses domain info from above)
      odoo_version: 8.0

    chrono123:
      userlist:
        - "{{ ehanse_users }}"
        - "{{ rfhk_users }}"
      ansible_host: "{{ _vault_chrono123_ip }}"
      ansible_port: "{{ _vault_host_port }}"
      fqdn: "chronob2b.com"
      hostname: "chronob2b"
      domains:
        - {vhost: "www.chrono123.com", type: "odoo"}
        - {vhost: "backend.chrono123.com", type: "odoo"}
        - {vhost: "www.godalko.com", type: "odoo"}
        - {vhost: "go.godalko.com", type: "odoo"}
        - {vhost: "www.chronob2b.com", type: "odoo"}
        - {vhost: "chronob2b.com", type: "odoo"}
      certbot_create_standalone_stop_services:
        - apache2
      odoo_version: 8.0

    twtest:
      userlist:
        - "{{ ehanse_users }}"
        - "{{ rfhk_users }}"
      ansible_host: "{{ _vault_twtest_ip }}"
      ansible_port: "{{ host_port }}"
      fqdn: "oatest.oa-trade.com"
      hostname: "oatest"
      timezone: "Asia/Hong_Kong"
      domains:
        - {vhost: "oatest.oa-trade.com", type: "odoo"}
      certbot_create_standalone_stop_services:
        - apache2
      odoo_version: 8.0
      odoo_config_debug_mode: True
      odoo_config_auto_reload: True
      odoo_config_data_dir: /home/odoo/.local/share/Odoo
      odoo_config_server_wide_modules: web,web_kanban,


    # runbot will run in the timeware group so that Yoshi etc may log in
    runbot:
      userlist:
        - "{{ ehanse_users }}"
        - "{{ rfhk_users }}"
        - "{{ intelligentiio_users }}"
      ansible_host: "{{ _vault_runbot_ip }}"
      ansible_port: "{{ host_port }}"
      fqdn: "runbot.ehanse.de"
      hostname: "runbot"
      timezone: "Asia/Hong_Kong"
      domains:
        - {vhost: "runbot.ehanse.de", type: "odoo"}
      certbot_create_standalone_stop_services:
        - nginx
      odoo_version: 11.0
      odoo_config_debug_mode: True
      odoo_config_auto_reload: True
      odoo_config_data_dir: /home/odoo/.local/share/Odoo
      odoo_config_server_wide_modules: web,web_kanban,
      odoo_config_superadmin_password: "{{ _vault_odoo_config_superadmin_password_runbot }}"

    # runbot will run in the timeware group so that Yoshi etc may log in
    testchrono:
      userlist:
        - "{{ ehanse_users }}"
        - "{{ rfhk_users }}"
      ansible_host: "{{ _vault_testchrono_ip }}"
      ansible_port: "{{ host_port }}"
      fqdn: "runbot.ehanse.de"
      hostname: "testchrono"
      timezone: "Asia/Hong_Kong"
      domains:
        - {vhost: "test.chrono123.com", type: "odoo"}
      certbot_create_standalone_stop_services:
        - nginx
      odoo_version: 12.0
      odoo_config_debug_mode: True
      odoo_config_auto_reload: True
      odoo_config_data_dir: /home/odoo/.local/share/Odoo
      odoo_config_server_wide_modules: web,web_kanban,
      odoo_config_superadmin_password: "{{ _vault_odoo_config_superadmin_password_runbot }}"




      













