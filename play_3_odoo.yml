# Dieses Playbook MUSS mit Python2 als ansible_interpreter
# ausgeführt werden! Also den command
#   ansible_python_interpreter=/usr/bin/python3
# im Inventory file weglassen! Ansonsten schlägt die Installation
# von psycopg2 (Python-Postgres-Adapter) fehl.

---
- name: Odoo installieren,
  hosts:
  - ehprod
  - ehtest
  - twprod
  - twtest
  - chrono123
  vars_files:  # Verweis auf verschlüsselte Pws
    - vars
    - vault
  vars:
    odoo_version: "{{ odoo_version }}"
    odoo_config_addons_path: " {{ odoo_config_addons_path }}"
    odoo_config_admin_passwd: "{{ odoo_config_superadmin_password }}"
    odoo_config_dbfilter: .*
    odoo_config_proxy_mode: False
    odoo_config_email_from: False
    odoo_config_limit_memory_hard: 4294967296
    odoo_config_limit_memory_soft: 671088640
    odoo_config_limit_time_cpu: 8192
    odoo_config_limit_time_real: 1000
    odoo_config_limit_time_real_cron: 3000    # >= 10.0
    odoo_config_list_db: False       #change by joerg on 07.03.2018
    odoo_config_log_level: info
    odoo_config_logfile: /var/log/odoo/odoo-server.log
    odoo_config_logrotate: True
    odoo_config_server_wide_modules: web,web_kanban,dbfilter_from_header,
    odoo_config_smtp_password: "{{ odoo_config_smtp_password }}"
    odoo_config_smtp_port: "{{ odoo_config_smtp_port }}"
    odoo_config_smtp_server: "{{ odoo_config_smtp_server }}"
    odoo_config_smtp_ssl: "{{ odoo_config_smtp_ssl }}"
    odoo_config_smtp_user: "{{ odoo_config_smtp_user }}"
    odoo_config_workers: 5
    odoo_config_xmlrpc: True                # <= 10.0
    odoo_config_xmlrpc_interface: ''        # <= 10.0
    odoo_config_xmlrpc_port: 8069           # <= 10.0
    odoo_config_xmlrpcs: True               # <= 8.0
    odoo_config_xmlrpcs_interface: ''       # <= 8.0
    odoo_config_xmlrpcs_port: 8071          # <= 8.0
    # TODO refactor variables to be in the host definitions!

  pre_tasks:
    - apt:
       name: "{{ item }}"
       update_cache: no
       state: present
      loop:
       - python3-pip            #vorab pip3 installieren
       - python-pip
       - postgresql             #vorab postgreql installieren
       - ttf-wqy-zenhei         #vorab chinesische Schrift installieren
       - ttf-wqy-microhei       #vorab chinesische Schrift installieren
       - python-setuptools
       - python3-setuptools
    - pip:
       name: XlsxWriter         # as per request by Manfred
       state: latest

    - locale_gen:
       name: de_DE.UTF-8
       state: present
    - locale_gen:
       name: en_US.UTF-8
       state: present
  roles:
   - ansible-odoo
  post_tasks:
   - git:
       repo: 'https://github.com/eHanse-IT/OAW_custom.git'
       dest: '/home/odoo/odoo/custom/OAW-custom'
       force: yes
       umask: '755'
   - git:
       repo: 'https://github.com/rfhk/awo-custom.git'
       dest: '/home/odoo/odoo/custom/awo-custom'
       force: yes
       umask: '755'
   - file:
       path: '/home/odoo/odoo/custom/'
       owner: "{{ odoo_user }}"
       group: "{{ odoo_user }}"
       mode: 0755
       recurse: yes


# TODO: user password encrypten vom odoo_user_passwd
# TODO https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-crypted-passwords-for-the-user-module




