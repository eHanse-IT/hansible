---

- name: Add Odoo system user
  user:
    name: "{{ odoo_user }}"
    shell: "{{ odoo_user_shell }}"
    password: "{{ odoo_user_passwd }}"
    system: "{{ odoo_user_system }}"
  tags:
    - odoo_user

- name: Create the odoo directory
  file:
    path:  "/home/{{ odoo_user }}"
    state: directory
    owner: "{{ odoo_user }}"
    group: "{{ odoo_user }}"
    mode:  "u=rwX,go=rX"

- name: Create the odoo subdirectory
  file:
    path: "/home/{{ odoo_user }}/odoo"
    state: directory
    owner: "{{ odoo_user }}"
    group: "{{ odoo_user }}"
    mode:  "u=rwX,go=rX"

- name: Create the addons paths
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ odoo_user }}"
    group: "{{ odoo_user }}"
    mode:  "u=rwX,go=rX"
  with_items:
    - "{{ odoo_config_addons_path }}"

- name: Create the odoo lib dir
  file:
    path: "/var/lib/odoo"
    state: directory
    owner: "{{ odoo_user }}"
    group: "{{ odoo_user }}"
    mode:  "u=rwX,go=rX"




 # install dependencies
- name: Install uncovered Odoo dependencies.
  apt:
    name: "{{ item }}"
    update_cache: no
    state: present
  loop:
    - python3-pip            #vorab pip3 installieren
    - python-pip
    - python3-setuptools
    - postgresql
    - libldap2-dev
    - libsasl2-dev
    - postgresql-contrib
    - libpq-dev
    - python-psycopg2
    - python3-psycopg2
    - python3-XlsxWriter
    - python3-xlwt
    - python3-xlrd

  # additional dependency: install wkhtmltox
- import_tasks: wkhtmltox.yml
  tags:
    - odoo
    - odoo_wkhtmltox

  # additional dependency: install reportlab fonts for barcode generation
- import_tasks: reportlab.yml
  tags:
    - odoo
    - odoo_reportlab


- name: Install postgresql and relevant python libraries.
  apt:
    name: "{{ item }}"
    update_cache: no
    state: present
  loop:
    - postgresql
    - postgresql-contrib
    - python-psycopg2
    - python3-psycopg2

- name: enable postgresql.
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Odoo Install 1/3 get Odoo apt signing key
  apt_key:
    url: https://nightly.odoo.com/odoo.key
    state: present

- name: Odoo Install 2/3 add http://nightly.odoo.com/{{ odoo_version }}/nightly/deb/ to the /etc/sources.list
  apt_repository:
    repo: deb http://nightly.odoo.com/{{ odoo_version }}/nightly/deb/ ./
    filename: odoo
    state: present

- name: Update and Upgrade apt cache.
  apt:
    upgrade: yes
    update_cache: yes

- name: Odoo Install 3/3 install odoo via deb package from https://nightly.odoo.com/{{ odoo_version }}/nightly/deb/odoo_12.0.latest_all.deb
  apt:
    name: odoo
    state: present
    #deb: https://nightly.odoo.com/12.0/nightly/deb/odoo_{{ odoo_version }}.latest_all.deb


- name: Generate Odoo configuration file
  template:
    src: odoo-{{ odoo_version }}.conf.j2
    dest: "{{ odoo_config_file }}"
    mode: 0600
    owner: "{{ odoo_user }}"
    group: "{{ odoo_user }}"
    #backup=yes
  notify: Restart Odoo

#- name: Generate Odoo service file and enable service    # not rqrd, because the deb package will install an init.d script
#  template:
#    src: odoo.service.j2
#    dest: /etc/systemd/system/{{ odoo_service }}.service
#    owner: root
#    group: root
#    mode: 0755
#    force: yes
#    backup: yes
#  notify:
#  - Reload Systemd
#  - Restart Odoo

- name: save config path in init.d script
  lineinfile:
    path: /etc/init.d/odoo
    regexp: '^CONFIG='
    line:   'CONFIG={{ odoo_config_file }}'
    state: present
    insertafter: '^DESC=>'    # caution case sensitive
  notify:
    - Restart Odoo









